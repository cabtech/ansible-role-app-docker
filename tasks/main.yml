---
# --------------------------------

- name: "Added some directories under /usr/local"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  loop: ["/usr/local/bin", "/usr/local/etc", "/usr/local/etc/bash.d"]
  become: true
  tags: ["ct-docker"]

- name: "Copy bash include file over"
  ansible.builtin.copy:
    src: docker.sh
    dest: /usr/local/etc/bash.d
    owner: root
    group: root
    mode: "0644"
  become: true
  tags: ["ct-docker"]

- name: "Copy convenience scripts over"
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /usr/local/bin
    owner: root
    group: root
    mode: "0755"
  loop:
  - dbuild.sh
  - drac.sh
  - drdi.sh
  - drun.sh
  become: true
  tags: ["ct-docker"]

- name: "Include tasks based on family"
  include_tasks: setup-{{ ct_family }}.yml
  when:
  - ct_family == "debian" or ct_family == "redhat"
  tags: ["ct-docker"]

- name: "Create Docker config dir"
  ansible.builtin.file:
    path: /root/.docker
    group: root
    mode: "0700"
    owner: root
    state: directory
  become: true
  tags: ["ct-docker"]

- name: "Install Docker config (not AWS)"
  ansible.builtin.copy:
    dest: /root/.docker/config.json
    group: root
    mode: "0600"
    owner: root
    src: config.json
  when: (ct_cloud|default("earth")) != "aws"
  become: true
  tags: ["ct-docker"]

- name: "Render Docker config (AWS only)"
  ansible.builtin.template:
    dest: /root/.docker/config.json
    group: root
    mode: "0600"
    owner: root
    src: config.json.j2
  when: (ct_cloud|default("earth")) == "aws"
  become: true
  tags: ["ct-docker"]

- name: "Add users to Docker role (IE:CM)"
  ansible.builtin.user:
    name: "{{ item }}"
    append: true
    groups: "docker"
  loop: "{{ docker_users }}"
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  tags: ["ct-docker"]

- name: "Render logrotate config"
  ansible.builtin.template:
    src: logrotate.j2
    dest: /etc/logrotate.d/{{ item.filename }}
    owner: root
    group: root
    mode: "0644"
  vars:
    lr_count: "{{ item.count }}"
    lr_path: "{{ item.path }}"
    lr_size: "{{ item.size }}"
  loop: "{{ docker_logrotation }}"
  become: true
  tags: ["ct-docker"]

- name: "Start and enable Docker service"
  ansible.builtin.service:
    name: docker
    enabled: true
    state: started
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  tags: ["ct-docker"]

# --------------------------------
...
