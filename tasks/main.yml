---
# --------------------------------

- name: "Added some directories under /usr/local"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  loop: ["/usr/local/bin", "/usr/local/etc", "/usr/local/etc/bash.d"]
  become: true
  tags: ["ct-docker"]

- name: "Copy bash include file over"
  ansible.builtin.copy:
    src: docker.sh
    dest: /usr/local/etc/bash.d
    owner: root
    group: root
    mode: "0644"
  become: true
  tags: ["ct-docker"]

- name: "Copy convenience scripts over"
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /usr/local/bin
    owner: root
    group: root
    mode: "0755"
  loop:
  - dbuild.sh
  - drac.sh
  - drdi.sh
  - drun.sh
  become: true
  tags: ["ct-docker"]

- name: "Disto/Family tasks (first found)"
  ansible.builtin.include_tasks:
    file: "{{ lookup('ansible.builtin.first_found', params) }}"
  vars:
    params:
      files:
      - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
      - "{{ ansible_distribution }}.yml"
      - "{{ ansible_os_family }}.yml"
      - default.yml
  tags: ["ct-docker"]

- name: "Create Docker config dir"
  ansible.builtin.file:
    path: /root/.docker
    group: root
    mode: "0700"
    owner: root
    state: directory
  become: true
  tags: ["ct-docker"]

- name: "Install Docker config (notAWS)"
  ansible.builtin.copy:
    dest: /root/.docker/config.json
    group: root
    mode: "0600"
    owner: root
    src: config.json
  when: "'aws' not in group_names"
  become: true
  tags: ["ct-docker"]

- name: "Render Docker config (AWS)"
  ansible.builtin.template:
    dest: /root/.docker/config.json
    group: root
    mode: "0600"
    owner: root
    src: config.json.j2
  when: "'aws' in group_names"
  become: true
  tags: ["ct-docker"]

- name: "Add users to Docker role (IECM)"
  ansible.builtin.user:
    append: true
    groups: "docker"
    name: "{{ item }}"
  loop: "{{ docker_users }}"
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  tags: ["ct-docker"]

- name: "Render logrotate config"
  ansible.builtin.template:
    dest: /etc/logrotate.d/{{ item.filename }}
    group: root
    mode: "0644"
    owner: root
    src: logrotate.j2
  vars:
    lr_count: "{{ item.count }}"
    lr_path: "{{ item.path }}"
    lr_size: "{{ item.size }}"
  loop: "{{ docker_logrotation }}"
  become: true
  tags: ["ct-docker"]

- name: "Manage Docker service (IECM)"
  ansible.builtin.service:
    enabled: "{{ docker_svc_enabled | bool }}"
    name: "{{ docker_svc_name }}"
    state: "{{ docker_svc_state }}"
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  tags: ["ct-docker"]

# --------------------------------
...
